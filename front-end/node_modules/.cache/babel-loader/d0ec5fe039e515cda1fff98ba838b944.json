{"ast":null,"code":"var _jsxFileName = \"/Users/vinicius/Desktop/Web Dev/SETool/frontend/src/Results.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Results() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [metrics, setMetrics] = useState([]);\n  const location = useLocation();\n  console.log(location.state.url);\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n\n      async function fetchData() {\n        const {\n          data\n        } = await axios.post('/api/airbnb', location.state.url);\n        setMetrics(data);\n      }\n\n      fetchData();\n    } catch (error) {\n      console.error(error);\n    }\n\n    setIsLoading(false);\n  }, []);\n  return metrics && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: metrics.test1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n}\n\n_s(Results, \"mUE5GZfsAe+hCdRuchufpuAe3Z8=\", false, function () {\n  return [useLocation];\n});\n\n_c = Results;\nexport default Results; // pass URL string to API call\n// create loading component\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["axios","useState","useEffect","useLocation","Results","isLoading","setIsLoading","metrics","setMetrics","location","console","log","state","url","fetchData","data","post","error","test1"],"sources":["/Users/vinicius/Desktop/Web Dev/SETool/frontend/src/Results.js"],"sourcesContent":["import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction Results() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [metrics, setMetrics] = useState([]);\n\n  const location = useLocation();\n\n  console.log(location.state.url);\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      async function fetchData() {\n        const { data } = await axios.post('/api/airbnb', location.state.url);\n        setMetrics(data);\n      }\n      fetchData();\n    } catch (error) {\n      console.error(error);\n    }\n    setIsLoading(false);\n  }, []);\n\n  return metrics && <div>{metrics.test1}</div>;\n}\n\nexport default Results;\n\n// pass URL string to API call\n// create loading component\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;EAEA,MAAMQ,QAAQ,GAAGN,WAAW,EAA5B;EAEAO,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,KAAT,CAAeC,GAA3B;EAEAX,SAAS,CAAC,MAAM;IACd,IAAI;MACFI,YAAY,CAAC,IAAD,CAAZ;;MACA,eAAeQ,SAAf,GAA2B;QACzB,MAAM;UAAEC;QAAF,IAAW,MAAMf,KAAK,CAACgB,IAAN,CAAW,aAAX,EAA0BP,QAAQ,CAACG,KAAT,CAAeC,GAAzC,CAAvB;QACAL,UAAU,CAACO,IAAD,CAAV;MACD;;MACDD,SAAS;IACV,CAPD,CAOE,OAAOG,KAAP,EAAc;MACdP,OAAO,CAACO,KAAR,CAAcA,KAAd;IACD;;IACDX,YAAY,CAAC,KAAD,CAAZ;EACD,CAZQ,EAYN,EAZM,CAAT;EAcA,OAAOC,OAAO,iBAAI;IAAA,UAAMA,OAAO,CAACW;EAAd;IAAA;IAAA;IAAA;EAAA,QAAlB;AACD;;GAvBQd,O;UAIUD,W;;;KAJVC,O;AAyBT,eAAeA,OAAf,C,CAEA;AACA"},"metadata":{},"sourceType":"module"}